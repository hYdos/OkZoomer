plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id 'io.github.juuxel.loom-quiltflower' version '1.7.0'
	id "org.quiltmc.quilt-mappings-on-loom" version "4.0.0"
	id 'maven-publish'
}

// Visual Studio Code completely ignores options.release.
// So, we still have those two.
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = System.env.GITHUB_ACTIONS == "true"
	? "${project.mod_version}.github.${System.env.GITHUB_RUN_NUMBER}"
	: project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
	maven { url "https://maven.gegy.dev" }
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
	// To change the versions, see the gradle.properties file
	minecraft libs.minecraft
	mappings loom.layered {
		addLayer quiltMappings.mappings("org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:v2")
	}
	modImplementation libs.fabric.loader
	
	modImplementation libs.bundles.qsl
	modImplementation libs.bundles.fabric.api
	modImplementation libs.mod.menu
	modImplementation libs.libzoomer
	modImplementation libs.spruceui
	modImplementation libs.quilt.json5
	
	include libs.bundles.qsl
	include libs.libzoomer
	include libs.spruceui
	include libs.quilt.json5
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Ensure that the encoding is set to UTF-8, no matter what the system default is.
	// This fixes some edge cases with special characters not displaying correctly.
	// See http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from "LICENSE"
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// Select the repositories you want to publish to
	// To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
	repositories {
		// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	}
}